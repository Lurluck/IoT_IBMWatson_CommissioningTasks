[{"id":"91f97da0.d49da","type":"tab","label":"Web Server","disabled":false,"info":""},{"id":"ea9fc0ca.2f179","type":"websocket out","z":"91f97da0.d49da","name":"","server":"9ceb3a2f.eb53e8","client":"","x":700,"y":280,"wires":[]},{"id":"cf29a616.572df8","type":"http response","z":"91f97da0.d49da","name":"","statusCode":"","headers":{},"x":690,"y":220,"wires":[]},{"id":"31048db7.aa84b2","type":"http in","z":"91f97da0.d49da","name":"","url":"/controlroom","method":"get","upload":false,"swaggerDoc":"","x":200,"y":220,"wires":[["ce6140f0.ee787"]]},{"id":"ce6140f0.ee787","type":"template","z":"91f97da0.d49da","name":"Control Room Web Page","field":"payload","fieldType":"msg","format":"html","syntax":"mustache","template":"<!DOCTYPE HTML>\n<html>\n    <head>\n    <title>Sensors and Servos</title>\n    <script type=\"text/javascript\">\n        var ws;\n        var wsUri = \"ws:\";\n        var loc = window.location;\n        console.log(loc);\n        if (loc.protocol === \"https:\") { wsUri = \"wss:\"; }\n        // This needs to point to the web socket in the Node-RED flow\n        // ... in this case it's ws/simple\n        wsUri += \"//\" + loc.host + loc.pathname.replace(\"controlroom\",\"ws/controlroom\");\n\n        function wsConnect() {\n            console.log(\"connect\",wsUri);\n            ws = new WebSocket(wsUri);\n            //var line = \"\";    // either uncomment this for a building list of messages\n            ws.onmessage = function(msg) {\n                var line = \"\";  // or uncomment this to overwrite the existing message\n                // parse the incoming message as a JSON object\n                var data = msg.data;\n                //console.log(data);\n                // build the output from the topic and payload parts of the object\n                line += \"<p>\"+data+\"</p>\";\n                // replace the messages div with the new \"line\"\n                document.getElementById('messages').innerHTML = line;\n                //ws.send(JSON.stringify({data:data}));\n            }\n            ws.onopen = function() {\n                // update the status div with the connection status\n                document.getElementById('status').innerHTML = \"connected\";\n                //ws.send(\"Open for data\");\n                console.log(\"connected\");\n            }\n            ws.onclose = function() {\n                // update the status div with the connection status\n                document.getElementById('status').innerHTML = \"not connected\";\n                // in case of lost connection tries to reconnect every 3 secs\n                setTimeout(wsConnect,3000);\n            }\n        }\n        \n        function doit(m) {\n            if (ws) { ws.send(m); }\n        }\n        var ssmsg = new SpeechSynthesisUtterance('Hi there. I am Timo\\'s Watson IoT servoce. Sensor values will be updated for you once in a minute!');\n        window.speechSynthesis.speak(ssmsg);\n    </script>\n    </head>\n    <body onload=\"wsConnect();\" onunload=\"ws.disconnect();\">\n        <font face=\"Arial\">\n        <h1>Sensors and servos</h1>\n        <p>The sensor locations and values - updated when a device sends new values:</p>\n        <div id=\"messages\"></div>\n        <button type=\"button\" onclick='doit(\"click\");'>Click to confirm you have got new values!</button>\n        <br><br/>\n        <button type=\"button\" onclick='doit(\"masterOFF\");'>Turn all servos OFF !</button>\n        <br><br/>\n        <button type=\"button\" onclick='doit(\"masterON\");'>Turn all servos ON !</button>\n        <button type=\"button\" onclick='doit(\"servo1ON\");'>Only servo 1 ON !</button>\n        <button type=\"button\" onclick='doit(\"servo2ON\");'>Only servo 2 ON !</button>\n        <hr/>\n        <div id=\"status\">unknown</div>\n        </font>\n    </body>\n</html>\n","output":"str","x":449,"y":220,"wires":[["cf29a616.572df8"]]},{"id":"ecfad89c.fef4a8","type":"function","z":"91f97da0.d49da","name":"format to a string","func":"msg.payload = msg.payload.toString();\nreturn msg;","outputs":1,"noerr":0,"x":450,"y":280,"wires":[["ea9fc0ca.2f179","5422f84e.bcc8a8"]]},{"id":"d803ba69.8d6d58","type":"websocket in","z":"91f97da0.d49da","name":"","server":"9ceb3a2f.eb53e8","client":"","x":470,"y":360,"wires":[["b092a074.dd087","6245ffe1.dd6af"]]},{"id":"b092a074.dd087","type":"debug","z":"91f97da0.d49da","name":"","active":true,"console":"false","complete":"false","x":690,"y":360,"wires":[]},{"id":"9569b80d.4440d8","type":"ibmiot in","z":"91f97da0.d49da","authentication":"boundService","apiKey":"","inputType":"evt","logicalInterface":"","ruleId":"","deviceId":"MSensors1","applicationId":"","deviceType":"MicrocontrollerSensors","eventType":"+","commandType":"","format":"json","name":"IBM IoT App In","service":"registered","allDevices":false,"allApplications":false,"allDeviceTypes":false,"allLogicalInterfaces":false,"allEvents":true,"allCommands":false,"allFormats":false,"qos":"0","x":100,"y":380,"wires":[["fe3f970.6ec0168","a4d4306d.4a7e2"]]},{"id":"fe3f970.6ec0168","type":"debug","z":"91f97da0.d49da","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":310,"y":520,"wires":[]},{"id":"a4d4306d.4a7e2","type":"json","z":"91f97da0.d49da","name":"","property":"payload","action":"","pretty":false,"x":270,"y":340,"wires":[["ecfad89c.fef4a8","66824dfb.1ce1e4"]]},{"id":"66824dfb.1ce1e4","type":"debug","z":"91f97da0.d49da","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":530,"y":520,"wires":[]},{"id":"5422f84e.bcc8a8","type":"debug","z":"91f97da0.d49da","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":790,"y":520,"wires":[]},{"id":"6245ffe1.dd6af","type":"function","z":"91f97da0.d49da","name":"Trigger","func":"var fpayload = msg.payload;\nvar trigger = [false,false];\nvar msgOut =[\"\",\"\"];\n\nif (fpayload == \"masterOFF\")\n{\n    trigger[0] = false;\n    trigger[1] = false;\n    msgOut[0] = {payload:{\"mcommand\":trigger[0]}};\n    msgOut[1] = {payload:{\"mcommand\":trigger[1]}};\n}\n\nif (fpayload == \"masterON\")\n{\n    trigger[0] = true;\n    trigger[1] = true;\n    msgOut[0] = {payload:{\"mcommand\":trigger[0]}};\n    msgOut[1] = {payload:{\"mcommand\":trigger[1]}};\n}\n\nif (fpayload == \"servo1ON\")\n{\n    trigger[0] = true;\n    msgOut[0] = {payload:{\"mcommand\":trigger[0]}};\n    msgOut[1] = {payload:{\"mcommand\":trigger[1]}}\n}\n\nif (fpayload == \"servo2ON\")\n{\n    trigger[1] = true;\n    msgOut[0] = {payload:{\"mcommand\":trigger[0]}};\n    msgOut[1] = {payload:{\"mcommand\":trigger[1]}};\n}\n\nreturn msgOut;","outputs":2,"noerr":0,"x":440,"y":700,"wires":[["dfa2b3c3.4ee48","9e8c3344.3d508","b9b4a7fa.ad30c8","a30661ce.407b6"],["b01f3595.3f0dc8","c9723a15.212858","854b44d5.083cd8","4be5186a.a73f78"]]},{"id":"dfa2b3c3.4ee48","type":"debug","z":"91f97da0.d49da","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":710,"y":740,"wires":[]},{"id":"9e8c3344.3d508","type":"ibmiot out","z":"91f97da0.d49da","authentication":"boundService","apiKey":"","outputType":"evt","deviceId":"MServos1","deviceType":"MicrocontrollerServos","eventCommandType":"start","format":"json","data":"no command sent ","qos":0,"name":"send event to IBM IoT Pl","service":"registered","x":730,"y":620,"wires":[]},{"id":"b9b4a7fa.ad30c8","type":"debug","z":"91f97da0.d49da","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload.mcommand","x":730,"y":780,"wires":[]},{"id":"b01f3595.3f0dc8","type":"ibmiot out","z":"91f97da0.d49da","authentication":"boundService","apiKey":"","outputType":"evt","deviceId":"MServos2","deviceType":"MicrocontrollerServos","eventCommandType":"start","format":"json","data":"no command sent","qos":0,"name":"send event to IBM IoT Pl","service":"registered","x":730,"y":840,"wires":[]},{"id":"c9723a15.212858","type":"debug","z":"91f97da0.d49da","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":710,"y":960,"wires":[]},{"id":"854b44d5.083cd8","type":"debug","z":"91f97da0.d49da","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload.mcommand","x":730,"y":1000,"wires":[]},{"id":"a30661ce.407b6","type":"ibmiot out","z":"91f97da0.d49da","authentication":"boundService","apiKey":"","outputType":"cmd","deviceId":"MServos1","deviceType":"MicrocontrollerServos","eventCommandType":"start","format":"json","data":"no command sent","qos":0,"name":"Send command to IBM IoT device","service":"registered","x":760,"y":680,"wires":[]},{"id":"4be5186a.a73f78","type":"ibmiot out","z":"91f97da0.d49da","authentication":"boundService","apiKey":"","outputType":"cmd","deviceId":"MServos2","deviceType":"MicrocontrollerServos","eventCommandType":"start","format":"json","data":"no command sent","qos":0,"name":"Send command to IBM IoT device","service":"registered","x":760,"y":900,"wires":[]},{"id":"9ceb3a2f.eb53e8","type":"websocket-listener","z":"91f97da0.d49da","path":"/ws/controlroom","wholemsg":"false"}]